---
- name: ensure offline_content_dir is set
  set_fact: offline_content_dir='/home/ubuntu/offline_content/'
  when: offline_content_dir is undefined

- name: ensure offline_config_dir is set
  set_fact: offline_config_dir='/home/ubuntu/offline_config/'
  when: offline_config_dir is undefined

- name: create offline content directory for static web content
  file:
    path: '{{ offline_content_dir }}/static'
    state: directory

- name: create offline content directory for github.com
  file:
    path: '{{ offline_content_dir }}/static/github.com'
    state: directory

- name: include our list of github repositories to mirror
  include_vars: 'github_repos.yml'
  when: github_repos is undefined

- name: create directories for all of our organizations
  file:
    path: "{{ offline_content_dir }}/static/github.com/{{ item | regex_replace ('/.*','') }}"
    state: directory
  loop: '{{ github_repos }}'

- name: download all of our github repos.
  command: bash -e -c 'if [ -d {{ offline_content_dir }}/static/github.com/{{ item }} ]; then echo Refusing to re-download git repository {{ item }} - it is already present; else git clone --bare https://github.com/{{ item }} {{ offline_content_dir }}/static/github.com/{{ item }}; mv {{ offline_content_dir }}/static/github.com/{{ item }}/hooks/post-update.sample {{ offline_content_dir }}/static/github.com/{{ item }}/hooks/post-update; chmod a+x {{ offline_content_dir }}/static/github.com/{{ item }}/hooks/post-update; cd {{ offline_content_dir }}/static/github.com/{{ item }}/ && git update-server-info ; fi; '
  loop: '{{ github_repos }}'
